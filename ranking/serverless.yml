service: ranking
frameworkVersion: "3.27.0"
useDotenv: true

provider:
  name: aws
  versionFunctions: false
  runtime: python3.8
  region: us-east-2
  stage: dev
  profile: default
  iam:
    role:
      statements:
        - Effect: Allow
          Action: 'dynamodb:*'
          Resource: '*'

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: non-linux
    layer: true
    slim: true

functions:
  ranking:
    name: ranking
    handler: src/rank.handler
    layers:
      - Ref: PythonRequirementsLambdaLayer
    environment:
      MONGODB_RATEDRENTALS_URI: ${env:MONGODB_RATEDRENTALS_URI}
      MONGODB_RATEDRENTALS_DB_NAME: ${env:MONGODB_RATEDRENTALS_DB_NAME}
      MONGODB_RATEDRENTALS_RENTALSCA_COLLECTION_NAME: ${env:MONGODB_RATEDRENTALS_RENTALSCA_COLLECTION_NAME}
      DYNAMODB_RATEDRENTALS_TABLE_NAME: ${env:DYNAMODB_RATEDRENTALS_TABLE_NAME}
    timeout: 30
    memorySize: 10240
